{"version":3,"file":"messagepack.js","names":["pack","addExtension","Ping","constructor","timestamp","writePing","encoded","readPing","decoded","Class","type","write","read","Pong","wallclock","writePong","readPong","ObservedRemoveDump","queue","writeObservedRemoveDump","readObservedRemoveDump","PeerEvent","args","writePeerEvent","readPeerEvent","Close","code","message","writeClose","readClose","incrementedChunkId","Math","random","MergeChunksPromise","Promise","timeoutDuration","chunkCallbacks","resolve","reject","id","merged","bytesReceived","timeoutHandler","Error","timeout","setTimeout","addChunk","multipartContainer","Buffer","alloc","length","clearTimeout","buffer","copy","position","push","chunkCallback","Symbol","species","toStringTag","MultipartContainer","chunk","size","chunks","i","slice","getMergeChunksPromise","decodeMultipartContainer","readUInt32BE","encodeMultipartContainer","allocUnsafe","writeUInt32BE","unpack"],"sources":["../../src/messagepack.js"],"sourcesContent":["// @flow\n\nimport {\n  pack,\n  addExtension,\n} from 'msgpackr';\n\nexport class Ping {\n  constructor(timestamp:number) {\n    this.timestamp = timestamp;\n  }\n  declare timestamp: number;\n}\n\nfunction writePing(encoded: Ping) {\n  return encoded.timestamp;\n}\n\nfunction readPing(decoded: number) {\n  return new Ping(decoded);\n}\n\naddExtension({\n  Class: Ping,\n  type: 0x90,\n  write: writePing,\n  read: readPing,\n});\n\nexport class Pong {\n  constructor(timestamp:number, wallclock:number) {\n    this.timestamp = timestamp;\n    this.wallclock = wallclock;\n  }\n  declare timestamp: number;\n  declare wallclock: number;\n}\n\nfunction writePong(encoded: Pong) {\n  return [encoded.timestamp, encoded.wallclock];\n}\n\nfunction readPong(decoded:[number, number]) {\n  return new Pong(decoded[0], decoded[1]);\n}\n\naddExtension({\n  Class: Pong,\n  type: 0x91,\n  write: writePong,\n  read: readPong,\n});\n\nexport class ObservedRemoveDump {\n  constructor(queue:[Array<*>, Array<*>]) {\n    this.queue = queue;\n  }\n  declare queue:[Array<*>, Array<*>];\n}\n\nfunction writeObservedRemoveDump(encoded: ObservedRemoveDump) {\n  return encoded.queue;\n}\n\nfunction readObservedRemoveDump(decoded:[Array<*>, Array<*>]) {\n  return new ObservedRemoveDump(decoded);\n}\n\naddExtension({\n  Class: ObservedRemoveDump,\n  type: 0x92,\n  write: writeObservedRemoveDump,\n  read: readObservedRemoveDump,\n});\n\nexport class PeerEvent {\n  constructor(type:string, args:Array<any>) {\n    this.type = type;\n    this.args = args;\n  }\n  declare type:string;\n  declare args: Array<any>;\n}\n\nfunction writePeerEvent(encoded: PeerEvent) {\n  return [encoded.type, encoded.args];\n}\n\nfunction readPeerEvent(decoded:[string, Array<any>]) {\n  return new PeerEvent(decoded[0], decoded[1]);\n}\n\naddExtension({\n  Class: PeerEvent,\n  type: 0x93,\n  write: writePeerEvent,\n  read: readPeerEvent,\n});\n\nexport class Close {\n  constructor(code:number, message:string) {\n    this.code = code;\n    this.message = message;\n  }\n  declare code: number;\n  declare message: string;\n}\n\nfunction writeClose(encoded: Close) {\n  return [encoded.code, encoded.message];\n}\n\nfunction readClose(decoded:[number, string]) {\n  return new Close(decoded[0], decoded[1]);\n}\n\naddExtension({\n  Class: Close,\n  type: 0x94,\n  write: writeClose,\n  read: readClose,\n});\n\nlet incrementedChunkId = (Math.random() * 4294967296) >>> 0;\n\nexport class MergeChunksPromise extends Promise<Buffer> {\n  declare chunkCallbacks: Array<(MultipartContainer) => void>;\n  constructor(timeoutDuration: number) {\n    const chunkCallbacks = [];\n    super((resolve, reject) => {\n      let id;\n      let merged;\n      let bytesReceived = 0;\n      const timeoutHandler = () => {\n        reject(new Error(`MultipartContainer chunk timeout error after ${timeoutDuration}ms`));\n      };\n      let timeout = setTimeout(timeoutHandler, timeoutDuration);\n      const addChunk = (multipartContainer:MultipartContainer) => {\n        if (typeof id === 'undefined' || typeof merged === 'undefined') {\n          id = multipartContainer.id;\n          merged = Buffer.alloc(multipartContainer.length);\n        } else if (multipartContainer.id !== id) {\n          return;\n        }\n        clearTimeout(timeout);\n        multipartContainer.buffer.copy(merged, multipartContainer.position);\n        bytesReceived += multipartContainer.buffer.length;\n        if (bytesReceived < multipartContainer.length) {\n          timeout = setTimeout(timeoutHandler, timeoutDuration);\n          return;\n        }\n        resolve(merged);\n      };\n      chunkCallbacks.push(addChunk);\n    });\n    this.chunkCallbacks = chunkCallbacks;\n  }\n\n  push(multipartContainer:MultipartContainer) {\n    for (const chunkCallback of this.chunkCallbacks) {\n      chunkCallback(multipartContainer);\n    }\n  }\n\n  // $FlowFixMe\n  static get [Symbol.species]() {\n    return Promise;\n  }\n\n  // $FlowFixMe\n  get [Symbol.toStringTag]() {\n    return 'MergeChunksPromise';\n  }\n}\n\nexport class MultipartContainer {\n  static chunk: (Buffer, number) => Array<Buffer>;\n\n  static getMergeChunksPromise: (number) => MergeChunksPromise;\n\n  constructor(id:number, position:number, length: number, buffer:Buffer) {\n    this.id = id;\n    this.position = position;\n    this.length = length;\n    this.buffer = buffer;\n  }\n  declare id:number;\n  declare position:number;\n  declare length:number;\n  declare buffer:Buffer;\n}\n\nMultipartContainer.chunk = (buffer:Buffer, size:number) => {\n  const chunks = [];\n  for (let i = 0; i * size < buffer.length; i += 1) {\n    const slice = buffer.slice(i * size, (i + 1) * size);\n    chunks.push(pack(new MultipartContainer(incrementedChunkId, i * size, buffer.length, slice)));\n  }\n  incrementedChunkId += 1;\n  if (incrementedChunkId > 4294967294) {\n    incrementedChunkId = 0;\n  }\n  return chunks;\n};\n\nMultipartContainer.getMergeChunksPromise = (timeoutDuration: number) => new MergeChunksPromise(timeoutDuration);\n\nfunction decodeMultipartContainer(buffer: Buffer) {\n  const id = buffer.readUInt32BE(0);\n  const position = buffer.readUInt32BE(4);\n  const length = buffer.readUInt32BE(8);\n  return new MultipartContainer(id, position, length, buffer.slice(12));\n}\n\nfunction encodeMultipartContainer(multipartContainer: MultipartContainer) {\n  const buffer = Buffer.allocUnsafe(multipartContainer.buffer.length + 12);\n  buffer.writeUInt32BE(multipartContainer.id, 0);\n  buffer.writeUInt32BE(multipartContainer.position, 4);\n  buffer.writeUInt32BE(multipartContainer.length, 8);\n  multipartContainer.buffer.copy(buffer, 12);\n  return buffer;\n}\n\naddExtension({\n  Class: MultipartContainer,\n  type: 0x95,\n  pack: encodeMultipartContainer,\n  unpack: decodeMultipartContainer,\n});\n"],"mappings":"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"}